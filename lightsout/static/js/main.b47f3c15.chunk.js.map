{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["GameTile","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","size","numTiles","react_default","a","createElement","onClick","className","lit","style","width","height","Component","GameBoard","_this","lights","i","push","state","clicks","numClicks","init","bind","assertThisInitialized","reset","increaseClicks","decreaseClicks","increaseSize","decreaseSize","flipPos","Math","floor","random","setState","index","x","y","j","getEmptyLightsArray","light","parentElement","_this2","lightObjects","map","App_GameTile","key","getClickHandler","id","App","App_GameBoard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b47f3c15.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass GameTile extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\tvar size = 1 / this.props.numTiles * 100 + \"%\";\n\t\treturn <button onClick={ this.props.onClick } className={ this.props.lit? \"gametile light\" : \"gametile dark\" } style={ {width: size, height: size } } />\n\t}\n}\n\nclass GameBoard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar lights = [];\n\t\tfor (var i = 0; i < this.props.size * this.props.size; i++) {\n\t\t\tlights.push(false);\n\t\t}\n\t\tthis.state = { size: this.props.size, lights: lights, clicks: [], numClicks: this.props.numClicks };\n\t\tthis.init = this.init.bind(this);\n\t\tthis.reset = this.reset.bind(this);\n\t\tthis.increaseClicks = this.increaseClicks.bind(this);\n\t\tthis.decreaseClicks = this.decreaseClicks.bind(this);\n\t\tthis.increaseSize = this.increaseSize.bind(this);\n\t\tthis.decreaseSize = this.decreaseSize.bind(this);\n\t\tthis.flipPos = this.flipPos.bind(this);\n\t}\n\t\n\tinit() {\n\t\tvar lights = [];\n\t\tvar clicks = [];\n\n\t\tfor (let i = 0; i < this.state.size * this.state.size; i++) {\n\t\t\tlights.push(false);\n\t\t}\n\n\t\tfor (let i = 0; i < this.state.numClicks; i++) {\n\t\t\tclicks.push(Math.floor(Math.random() * this.state.size * this.state.size));\n\t\t\tthis.flipPos(lights, clicks[i]);\n\t\t}\n\n\t\tthis.setState({ size: this.state.size, lights: lights, clicks: clicks, numClicks: this.state.numClicks });\n\t}\n\n\treset() {\n\t\tvar lights = [];\n\n\t\tfor (let i = 0; i < this.state.size * this.state.size; i++) {\n\t\t\tlights.push(false);\n\t\t}\n\n\t\tfor (let i = 0; i < this.state.numClicks; i++) {\n\t\t\tthis.flipPos(lights, this.state.clicks[i]);\n\t\t}\n\n\t\tthis.setState({ size: this.state.size, lights: lights, clicks: this.state.clicks, numClicks: this.state.numClicks});\n\t}\n\n\tflipPos(lights, index) {\n\t\tvar x = index % this.state.size;\n\t\tvar y = Math.floor(index / this.state.size);\n\t\tfor (var i = -1; i < 2; i++) {\n\t\t\tfor (var j = -1; j < 2; j++) {\n\t\t\t\tif (x + i >= 0 && x + i < this.state.size && y + j >= 0 && y + j < this.state.size) {\n\t\t\t\t\tlights[(y + j) * this.state.size + x + i] = !lights[(y + j) * this.state.size + x + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn lights;\n\t}\n\n\tgetEmptyLightsArray(size) {\n\t\tvar lights = [];\n\n\t\tfor (let i = 0; i < size * size; i++) {\n\t\t\tlights.push(false);\n\t\t}\n\t\treturn lights;\n\t}\n\n\tincreaseClicks() {\n\t\tconst lights = this.getEmptyLightsArray(this.state.size);\n\t\tthis.setState({ size: this.state.size, lights: lights, clicks: this.state.clicks, numClicks: this.state.numClicks + 1 });\n\t}\n\n\tdecreaseClicks() {\n\t\tconst lights = this.getEmptyLightsArray(this.state.size);\n\t\tthis.setState({ size: this.state.size, lights: lights, clicks: this.state.clicks, numClicks: this.state.numClicks - 1 });\n\t}\n\t\n\tincreaseSize() {\n\t\tconst lights = this.getEmptyLightsArray(this.state.size + 1);\n\t\tthis.setState({ size: this.state.size + 1, lights: lights, clicks: this.state.clicks, numClicks: this.state.numClicks });\n\t}\n\n\tdecreaseSize() {\n\t\tconst lights = this.getEmptyLightsArray(this.state.size - 1);\n\t\tthis.setState({ size: this.state.size - 1, lights: lights, clicks: this.state.clicks, numClicks: this.state.numClicks });\n\t}\n\n\tgetClickHandler(light, index) {\n\t\tvar parentElement = this;\n\t\tfunction generatedOnClick() {\n\t\t\tvar lights = parentElement.flipPos(parentElement.state.lights, index);\n\t\t\tparentElement.setState({ size: parentElement.state.size, lights: lights, clicks: parentElement.state.clicks });\n\t\t}\n\t\treturn generatedOnClick;\n\t}\n\n\trender() {\n\t\tconst lightObjects = this.state.lights.map((light, index) => \n\t\t\t\t<GameTile \n\t\t\t\t\tnumTiles={ this.state.size }\n\t\t\t\t\tkey={ index }\n\t\t\t\t\tlit={ light }\n\t\t\t\t\tonClick={ this.getClickHandler(light, index) }\n\t\t\t\t/>\n\t\t\t);\n\t\tconst width10 = { width: \"10em\" };\n\t\tconst width9 = { width: \"9em\" };\n\n\t\treturn (\n\t\t\t<div id=\"Container\">\n\t\t\t<div\n\t\t\t\tid=\"GameBoard\"\n\t\t\t>\n\t\t\t\t{ lightObjects }\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className=\"flexContainer\">\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.init }>New Game</button>\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.reset }>Reset</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flexContainer\">\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.decreaseClicks }>Decrease clicks</button>\n\t\t\t\t\t<span className=\"width2em\">{ this.state.numClicks }</span>\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.increaseClicks }>Increase clicks</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flexContainer\">\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.decreaseSize }>Decrease size</button>\n\t\t\t\t\t<span className=\"width2em\">{ this.state.size }</span>\n\t\t\t\t\t<button className=\"shrinkable50\" onClick={ this.increaseSize }>Increase size</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t}\n\trender() {\n\t\treturn <GameBoard size={ 6 } numClicks={ 3 }/>\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}